/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    // mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'

    implementation project(':core')
    implementation 'ch.qos.logback:logback-classic:1.2.11'
}

application {
    // Define the main class for the application.
    //mainClass = 'son.pc.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

tasks.register('build jar file', Jar) {
    dependsOn ':forPC:jar'  // Depends on the core module's jar task

    from project(':forPC').sourceSets.main.output
    from project(':core').sourceSets.main.output
    // Include all dependencies in the JAR
    //from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }

    // Specify the main class for the executable JAR
    manifest {
        attributes 'Main-Class': 'son.pc.App' // Replace with your main class
    }

    // Rename the JAR file if needed
    archiveFileName = 'son.jar' // Customize the JAR name
    destinationDir file('build')      // Output directory
}
